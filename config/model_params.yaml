# ============================================================================
# HYPERPARAMETER SEARCH SPACES FOR OPTUNA OPTIMIZATION
# ============================================================================

xgboost:
  search_space:
    n_estimators:
      type: "int"
      low: 500
      high: 2000
      step: 100
    
    max_depth:
      type: "int"
      low: 4
      high: 12
    
    learning_rate:
      type: "loguniform"
      low: 0.01
      high: 0.3
    
    subsample:
      type: "uniform"
      low: 0.6
      high: 1.0
    
    colsample_bytree:
      type: "uniform"
      low: 0.6
      high: 1.0
    
    min_child_weight:
      type: "int"
      low: 1
      high: 10
    
    gamma:
      type: "loguniform"
      low: 0.001
      high: 10.0
    
    reg_alpha:
      type: "loguniform"
      low: 0.0001
      high: 10.0
    
    reg_lambda:
      type: "loguniform"
      low: 0.0001
      high: 10.0

catboost:
  search_space:
    iterations:
      type: "int"
      low: 500
      high: 2000
      step: 100
    
    depth:
      type: "int"
      low: 4
      high: 10
    
    learning_rate:
      type: "loguniform"
      low: 0.01
      high: 0.3
    
    l2_leaf_reg:
      type: "loguniform"
      low: 0.1
      high: 10.0
    
    random_strength:
      type: "uniform"
      low: 0.0
      high: 1.0
    
    bagging_temperature:
      type: "uniform"
      low: 0.0
      high: 1.0

random_forest:
  search_space:
    n_estimators:
      type: "int"
      low: 200
      high: 1000
      step: 50
    
    max_depth:
      type: "int"
      low: 10
      high: 30
    
    min_samples_split:
      type: "int"
      low: 2
      high: 20
    
    min_samples_leaf:
      type: "int"
      low: 1
      high: 10
    
    max_features:
      type: "categorical"
      choices: ["sqrt", "log2", 0.5, 0.7, 0.9]

gradient_boosting:
  search_space:
    n_estimators:
      type: "int"
      low: 200
      high: 1000
      step: 50
    
    max_depth:
      type: "int"
      low: 3
      high: 10
    
    learning_rate:
      type: "loguniform"
      low: 0.01
      high: 0.3
    
    subsample:
      type: "uniform"
      low: 0.6
      high: 1.0
    
    min_samples_split:
      type: "int"
      low: 2
      high: 20
    
    min_samples_leaf:
      type: "int"
      low: 1
      high: 10
